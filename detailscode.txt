import { useEffect, useState } from "react";
import ForcastItem from "./ForcastItem";
import fetchWeatherData from "../utils/fetchWeatherData";

const apiKey = "2643e51d9ed12fc4d4390c78751a2d1a";

export default function WeatherDetails({ data }) {
  const [forcastData, setForcastData] = useState([]);
  const [error, setError] = useState("");

  const dailyForecast = forcastData.list
    ? forcastData.list.filter((item) => item.dt_txt.includes("12:00:00"))
    : [];

  const formattedDate = new Date().toLocaleDateString("en-US", {
    weekday: "short",
    month: "short",
    day: "numeric",
  });

  useEffect(() => {
    async function fetchForecast() {
      try {
        const data = await fetchWeatherData("helsinki", apiKey, "forecast");
        setForcastData(data);
      } catch (error) {
        setError("Failed to fetch forecast data. Please try again later.");
      }
    }

    fetchForecast();
  }, []);
  return (
    <div className="flex flex-col text-center">
      <h2 className="m-4 font-semibold">{data.name}</h2>
      <p>{formattedDate}</p>

      <div className="flex items-center justify-center space-x-4">
        <p className="order-1">{data.main.temp}Â°C</p>

        <img
          className="h-16 w-16"
          src={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}
          alt={data.weather[0].description}
        />
      </div>

      <div>
        <h3 className="mt-4 mb-4">5-Day Forecast</h3>
        <ul className="flex space-x-4">
          {dailyForecast.map((day, index) => {
            const forcastIconUrl = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
            const date = new Date(day.dt_txt).toLocaleDateString("en-US", {
              weekday: "short",
            });

            return (
              <ForcastItem
                date={date}
                key={index}
                iconUrl={forcastIconUrl}
                temp={day.main.temp}
                altImage={day.weather[0].description}
              />
            );
          })}
        </ul>
        {error && <p className="text-red-500">{error}</p>}
      </div>
    </div>
  );
}
